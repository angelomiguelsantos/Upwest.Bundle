@using System
@using Upwest.ViewModels
@using Upwest.Extensions
@model TimeLineViewModel


@if (Model.RenderCoreDependencies)
{   
    <link rel="stylesheet" href="~/App_Plugins/upwest.bundle/_upwest.base/dependencies/bootstrap-upwest.css">
}

@if (Model.RenderDependencies)
{
    <link rel="stylesheet" href="~/App_Plugins/upwest.bundle/upwest.timeLine/dependencies/timeline.css">    
    <script src="~/App_Plugins/upwest.bundle/upwest.timeLine/dependencies/timeline.js"></script>
}

@if (Model.OverrideCss)
{   
    <link rel="stylesheet" href="~/App_Plugins/upwest.bundle/upwest.timeLine/dependencies/override.css">
}

@if (Model.Error)
{   
    @(await Component.InvokeAsync("Base", new {componentName = "timeLine",  message =  Model.ErrorMessage }))
}
else
{
    <div class="bootstrap-upwest">    
        <div id="@Model.Alias"></div>
    </div>
    <script>
        $(document).ready(function() { 
            
            var events@(Model.Alias) = @Html.Raw(Model.EventsArray);

            $('#@Model.Alias').roadmap(events@(Model.Alias), {
                eventsPerSlide: @Model.Eventsperslide,
                slide: @Model.Slide,
                orientation: '@Model.Orientation',
                prevArrow: '<i class="fa fa-arrow-left"><</i>',
                nextArrow: '<i class="fa fa-arrow-right">></i>'
            }); 
        });
    </script>
}

    




    